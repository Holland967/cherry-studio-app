# 文件名: .github/workflows/expo-build.yml
name: Build Expo Android APK (with npm)

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 3000

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 设置 Node.js 环境（使用 npm，不再需要 Corepack）
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm' # 改为缓存 npm

      # 3. 安装项目依赖（使用 npm 并强制安装）
      - name: Install dependencies with npm
        run: |
          npm install --force
          # --force 会忽略 package.json 中的 "packageManager" 字段和引擎冲突

      # 4. 执行 drizzle-kit generate
      # 使用 npx，因为现在是 npm 环境
      - name: Generate Drizzle Schema
        run: npx drizzle-kit generate

      # 5. 设置 JDK 17
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 6. 设置 Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 7. 执行 Expo Prebuild
      - name: Expo Prebuild (Android)
        run: npx expo prebuild -p android --clean

      # 8. 构建 APK
      - name: Build Android APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleDebug

      # 9. 上传 APK
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
